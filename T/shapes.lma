
import /io

trait Shape ::
    func area:Int :: self --
--

datatype Circle ::
    radius: Int
--

interface Circle ::
    radius: Int
--

datatype Circle ::
    fields : Struple<K?, V>

    interface : Struple<K, T>

    impl : Struple<K, F>
--

datatype Square ::
    length:Int
--

datatype Rectangle ::
    length:Int
    width:Int

    func construct:Circle :: radius:Int ->
        void(Circle)(radius:radius)
    --
--

impl Shape with Circle ::
--

impl Circle as Shape ::
--

impl Shape with Circle as Shape ::
    func area:Int :: self ->
        self.radius * self.radius * 3
    --
--

impl Shape with Square ::
    func area:Int :: self ->
        self.length * self.length
    --
--

impl Rectangle as Shape ::
    func area:Int :: self ->
        self.length * self.width
    --
--

func main ->
    let c := Circle(2)
    let s := Square(3)
    let r := Rectangle(4, 5)
    io.print("hello\n")
--
