
datatype Bool
|False
|True
--

datatype Failure --
datatype Hashtag --
datatype Int -RUST-
datatype Str -RUST-
datatype # --
datatype Void --
datatype NoResult --

func cons'T:[T] :: head:T tail:[T] -RUST-

macro boolean_and :: and_a and_b ->
    if
    |and_a -> and_b
    |_ -> False
    --
--

macro boolean_or :: or_a or_b ->
    if
    |or_a -> True
    |_ -> or_b
    --
--

macro fail :: ft msg ->
    create_failure(ft, msg)
--

func create_failure:Failure :: failure_tag:# msg:Str -RUST-

func int_add:Int :: a:Int b:Int -RUST-
func int_sub:Int :: a:Int b:Int -RUST-
func int_mult:Int :: a:Int b:Int -RUST-
func int_div:Int :: a:Int b:Int -RUST-
func int_mod:Int :: a:Int b:Int -RUST-
func int_negate:Int :: a:Int -RUST-
func int_equal:Bool :: a:Int b:Int -RUST-
func int_less_than:Bool :: a:Int b:Int -RUST-

func int_lteq:Bool :: a:Int b:Int ->
    a < b or a == b
--

func int_gt:Bool :: a:Int b:Int ->
    not a <= b
--

func int_gteq:Bool :: a:Int b:Int ->
    not a < b
--
