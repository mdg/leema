
float = @{ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
int = @{ ASCII_DIGIT+ }
number = _{ float | int }

strchar = { !"\"" ~ !"$" ~ ANY }
strlit = @{ strchar+ }
strid = _{ "$" ~ id }
strx = _{ "${" ~ expr ~ "}" }
str = ${ "\"" ~ (strlit | strid | strx )* ~ "\"" }

plus = { "+" }
dash = { "-" }
star = { "*" }
slash = { "/" }
tick = { "'" }
dot = { "." }
modulo = { "modulo" }
and = { "and" }
or = { "or" }
not = { "not" }
less_than = { "<" | "<=" }
equality = { "==" | "!=" }
greater_than = { ">" | ">=" }
add_newline = { "\\n" }
block_arrow = _{ "->" | ">>" }

prefix_op = _{
    dash
    | not
}

postfix_op = _{
    add_newline
}

// keywords
func_mode = { "func" }
rust_block = { "-RUST-" }
mxport = { "import" | "export" }

infix_op = _{
    plus | dash | star | slash | modulo
    | and | or
    | less_than | equality | greater_than
    | tick
}

WHITESPACE = _{ " " }

keywords = _{
    and | or | not
    | func_mode
    | mxport
}

modname_tail = _{ ASCII_ALPHA_LOWER | ASCII_DIGIT }
modname = @{ !keywords ~ ASCII_ALPHA_LOWER ~ modname_tail* }

id = @{ !keywords ~ (LETTER | "_") ~ ( LETTER | NUMBER | "_" )* }

term = _{ id | number | str | ("(" ~ expr ~ ")") }

prefix_expr = { prefix_op ~ x1 }
postfix_expr = { term ~ postfix_op }

x_maybe_k = { (id ~ ":")? ~ expr }
call_args = _{ x_maybe_k ~ ("," ~ x_maybe_k)* ~ ","? }

dot_expr = { term ~ "." ~ id }
typecall_expr = { term ~ "'" ~ id }
call_expr = { term ~ "(" ~ call_args? ~ ")" }

x1 = _{
    prefix_expr
    | postfix_expr
    | dot_expr
    | typecall_expr
    | call_expr
    | term
}

expr = !{
    x1 ~ (infix_op ~ x1)+
    | x1
}

// types

type_term = _{
    "(" ~ typex ~ ")"
    | id
}

type_func = {
    "::" ~ x_maybe_k*
    | type_term ~ "::" ~ x_maybe_k*
    | type_term ~ "::"
}

typex = { type_func | type_term }

// statements

def_func_arg = { id ~ (":" ~ type_term)? }
def_func_args = { ("::" ~ def_func_arg+)? }
def_func_result = { (":" ~ type_term)? }
def_func = !{ func_mode ~ id ~ def_func_result ~ def_func_args ~ func_block }

mxid = _{ "." ~ id }
mxhead = @{
    ("/" ~ modname)
    | ("../" ~ modname)
    | modname
}
mxmod = @{ mxhead ~ ("/" ~ modname)* }
mxline = ${ mxmod ~ mxid? }
// mxblock = { block_arrow ~ mxline+ ~ "--" }
mxstmt = !{ mxport ~ (mxline | mxid | star) }

stmt = _{
    def_func
    | mxstmt
    | expr
}

line = _{ " "* ~ stmt? }
stmt_block = ${ (line ~ "\n")* }
arrow_block = _{ block_arrow ~ stmt_block }
func_block = _{
    rust_block
    | (block_arrow ~ stmt_block ~ "--")
    | (block_arrow ~ expr ~ "--")
}
file = ${ (line ~ "\n")* ~ line ~ "\n"? ~ EOI }
